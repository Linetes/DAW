Laboratorio 15 : Creación de consultas utilizando SQL Básico

Consulta de un tabla completa
Algebra relacional.
materiales

SQL
select * from materiales
44 renglones
clave   descripción     costo
1000	Varilla 3/16	100.00
1010	Varilla 4/32	115.00
1020	Varilla 3/17	130.00

Selección
Algebra relacional.
SL{clave=1000}(materiales)

SQL
select * from materiales
where clave=1000
1 renglones
1000	Varilla 3/16	100.00

Proyección
Algebra relacional.
PR{clave,rfc,fecha} (entregan)

SQL
select clave,rfc,fecha from entregan
132 renglones
clave   rfc             fecha
1000	AAAA800101   	1998-07-08 00:00:00.000
1000	AAAA800101   	1999-08-08 00:00:00.000
1000	AAAA800101   	2000-04-06 00:00:00.000

Reunión Natural

Algebra relacional.
entregan JN materiales

SQL
select * from materiales,entregan
where materiales.clave = entregan.clave
132 renglones
clave	descripciÛn	costo	clave	rfc		numero	fecha
1000	Varilla 3/16	100.00	1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00
1000	Varilla 3/16	100.00	1000	AAAA800101   	5019	1999-08-08 00:00:00.000	254.00
1000	Varilla 3/16	100.00	1000	AAAA800101   	5019	2000-04-06 00:00:00.000	7.00

Si algún material no ha se ha entregado ¿Aparecería en el resultado de esta consulta?
 No, porque no estaría en la tabla entregan y al hacer el where quitaría esa tupla.

Reunión con criterio específico

Algebra relacional.
entregan JN{entregan.numero <= proyectos.numero} proyectos

SQL
select * from entregan,proyectos
where entregan.numero < = proyectos.numero
1188 renglones
Clave	RFC		Numero	Fecha			Cantidad              Numero       Denominacion
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00	5000	Vamos Mexico
1200	EEEE800101   	5000	2000-03-05 00:00:00.000	177.00	5000	Vamos Mexico
1400	AAAA800101   	5000	2002-03-12 00:00:00.000	382.00	5000	Vamos Mexico

Unión (se ilustra junto con selección)

Algebra relacional.
SL{clave=1450}(entregan) UN SL{clave=1300}(entregan)

SQL
(select * from entregan where clave=1450)
union
(select * from entregan where clave=1300)
3 renglones
1300	GGGG800101   	5005	2002-06-10 00:00:00.000	521.00
1300	GGGG800101   	5005	2003-02-02 00:00:00.000	457.00
1300	GGGG800101   	5010	2003-01-08 00:00:00.000	119.00

¿Cuál sería una consulta que obtuviera el mismo resultado sin usar el operador Unión? Compruébalo.
select * from entregan where clave=1450 OR clave=1300

Intersección (se ilustra junto con selección y proyección)

Algebra relacional.
PR{clave}(SL{numero=5001}(entregan)) IN PR{clave}(SL{numero=5018}(entregan))

SQL
Nota: Debido a que en SQL server no tiene definida alguna palabra reservada que nos permita hacer esto de una manera entendible, veremos esta sección en el siguiente laboratorio con el uso de Subconsultas. Un ejemplo de un DBMS que si tiene la implementación de una palabra reservada para esta función es Oracle, en él si se podría generar la consulta con una sintaxis como la siguiente:

(select clave from entregan where numero=5001)
intersect
(select clave from entregan where numero=5018)
1 renglon
1010

Diferencia (se ilustra con selección )

Algebra relacional.
entregan - SL{clave=1000}(entregan)

SQL
(select * from entregan)
minus
(select * from entregan where clave=1000)
select * from entregan where NOT clave=1000
129 renglones
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1010	BBBB800101   	5018	2000-11-10 00:00:00.000	667.00
1010	BBBB800101   	5018	2002-03-29 00:00:00.000	523.00

Nuevamente, "minus" es una palabra reservada que no está definida en SQL Server, define una consulta que regrese el mismo resultado.

Producto cartesiano

Algebra relacional.
entregan X materiales

SQL
select * from entregan,materiales
5808 renglones
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00	1000	Varilla 3/16	100.00
1000	AAAA800101   	5019	1999-08-08 00:00:00.000	254.00	1000	Varilla 3/16	100.00
1000	AAAA800101   	5019	2000-04-06 00:00:00.000	7.00	1000	Varilla 3/16	100.00

¿Cómo está definido el número de tuplas de este resultado en términos del número de tuplas de entregan y de materiales?
entregan * numero de renglones en materiales = 132 * 44 = 5808

Construcción de consultas a partir de una especificación

Plantea ahora una consulta para obtener las descripciones de los materiales entregados en el año 2000.

Recuerda que la fecha puede indicarse como '01-JAN-2000' o '01/01/00'.

Importante: Recuerda que cuando vayas a trabajar con fechas, antes de que realices tus consultas debes ejecutar la instrucción "set dateformat dmy". Basta con que la ejecutes una sola vez para que el manejador sepa que vas a trabajar con ese formato de fechas.

SET DATEFORMAT dmy
SELECT Descripcion
FROM Materiales, Entregan
WHERE Fecha BETWEEN '01-JAN-2000' AND '31/12/2000'
1232 renglones
Varilla 3/16
Varilla 4/32
Varilla 3/17

¿Por qué aparecen varias veces algunas descripciones de material?
Porque no se usó GROUP BY.

Uso del calificador distinct

En el resultado anterior, observamos que una misma descripción de material aparece varias veces.

Agrega la palabra distinct inmediatamente después de la palabra select a la consulta que planteaste antes.

SET DATEFORMAT dmy
SELECT DISTINCT Descripcion
FROM Materiales, Entregan
WHERE Fecha BETWEEN '01-JAN-2000' AND '31/12/2000'
42 renglones
Arena
Block
Cantera amarilla

¿Qué resultado obtienes en esta ocasión?
Ya no se repiten.

Ordenamientos.

Si al final de una sentencia select se agrega la cláusula

order by campo [desc] [,campo [desc] ...]

donde las partes encerradas entre corchetes son opcionales (los corchetes no forman parte de la sintaxis), los puntos suspensivos indican que pueden incluirse varios campos y la palabra desc se refiere a descendente. Esta cláusula permite presentar los resultados en un orden específico.

Obtén los números y denominaciones de los proyectos con las fechas y cantidades de sus entregas, ordenadas por número de proyecto, presentando las fechas de la más reciente a la más antigua.
SET DATEFORMAT dmy
SELECT P.Numero, P.Denominacion, E.Fecha, E.Cantidad
FROM Proyectos P, Entregan E
WHERE P.Numero = E.Numero
ORDER BY E.Fecha DESC
132 renglones
5004	Educando en Coahuila	2003-09-01 00:00:00.000	270.00
5011	Remodelación de aulas del IPP	2003-08-05 00:00:00.000	549.00
5011	Remodelación de aulas del IPP	2003-06-28 00:00:00.000	368.00

Uso de expresiones.

En álgebra relacional los argumentos de una proyección deben ser columnas. Sin embargo en una sentencia SELECT es posible incluir expresiones aritméticas o funciones que usen como argumentos de las columnas de las tablas involucradas o bien constantes. Los operadores son:

+ Suma
- Resta
* Producto
/ División

Las columnas con expresiones pueden renombrarse escribiendo después de la expresión un alias que puede ser un nombre arbitrario; si el alias contiene caracteres que no sean números o letras (espacios, puntos etc.) debe encerrarse entre comillas dobles (" nuevo nombre" ). Para SQL Server también pueden utilizarse comillas simples.

Operadores de cadena

El operador LIKE se aplica a datos de tipo cadena y se usa para buscar registros, es capaz de hallar coincidencias dentro de una cadena bajo un patrón dado.

También contamos con el operador comodín (%), que coincide con cualquier cadena que tenga cero o más caracteres. Este puede usarse tanto de prefijo como sufijo.

SELECT * FROM productos where Descripcion LIKE 'Si%'
2 renglones
1120	Sillar rosa	100.00
1130	Sillar gris	110.00

¿Qué resultado obtienes?
Tuplas con la descripción empezando con Si
Explica que hace el símbolo '%'
Como el *, comodín que sirve como epsilon.
¿Qué sucede si la consulta fuera : LIKE 'Si' ?
Sólo busca los que sólo sean Si
¿Qué resultado obtienes?
SELECT * FROM materiales where Descripcion LIKE 'Si'
0 renglones

Explica a qué se debe este comportamiento.
Porque no hay descripciones que sólo sean Si.

Otro operador de cadenas es el de concatenación, (+, +=) este operador concatena dos o más cadenas de caracteres.
Su sintaxis es : Expresión + Expresión.
Un ejemplo de su uso, puede ser:
SELECT (Apellido + ', ' + Nombre) as Nombre FROM Personas;

DECLARE @foo varchar(40);
DECLARE @bar varchar(40);
SET @foo = '¿Que resultado';
SET @bar = ' ¿¿¿??? '
SET @foo += ' obtienes?';
PRINT @foo + @bar;

¿Qué resultado obtienes de ejecutar el siguiente código?
Nada
 obtienes?¿¿¿???
¿Para qué sirve DECLARE?
Declarar variables
¿Cuál es la función de @foo?
Es un varchar(40)
¿Que realiza el operador SET?
Le da valor a una variable.

SELECT RFC FROM Entregan WHERE RFC LIKE '[A-D]%';
72 renglones
AAAA800101
AAAA800101
AAAA800101
Regresa tuplas con el RFC que empiecen con letras de A a D y luego %.

SELECT RFC FROM Entregan WHERE RFC LIKE '[^A]%';
114 renglones
BBBB800101
BBBB800101
BBBB800101
Regresa tuplas con el RFC que no empiecen con letras de A y luego %.

SELECT Numero FROM Entregan WHERE Numero LIKE '___6';
14 renglones
5016
5006
5006
Regresa tuplas con el numero que acabe con 6 y tenga 3 numeros antes.

SELECT Clave,RFC,Numero,Fecha,Cantidad
FROM Entregan
WHERE Numero Between 5000 and 5010;
60 renglones
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1020	CCCC800101   	5002	2001-07-29 00:00:00.000	582.00

¿Cómo filtrarías rangos de fechas?
Con un Between y poner las fechas.

SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
Exists ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC] )
16 renglones
AAAA800101   	165.00	1998-07-08 00:00:00.000	5000
AAAA800101   	86.00	1999-01-12 00:00:00.000	5008
AAAA800101   	152.00	2003-01-12 00:00:00.000	5004

¿Qué hace la consulta?
Regresa las tuplas donde existan proovedores con RazonSocial con un nombre que empiece con "La".
¿Qué función tiene el paréntesis ( ) después de EXISTS?
Indica que es una subconsulta y se debe hacer primero.

Tomando de base la consulta anterior del EXISTS, realiza el query que devuelva el mismo resultado, pero usando el operador NOT IN Realiza un ejemplo donde apliques algún operador : ALL, SOME o ANY
SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
RFC IN ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC] )
output: (16 renglones)
RFC		Cantidad Fecha				Numero
AAAA800101   	165.00	 1998-07-08 00:00:00.000	5000
CCCC800101   	582.00	 2001-07-29 00:00:00.000	5002
AAAA800101   	86.00	 1999-01-12 00:00:00.000	5008

Not In

SELECT RFC,Cantidad, Fecha,Numero
FROM [Entregan]
WHERE [Numero] Between 5000 and 5010 AND
RFC NOT IN ( SELECT [RFC]
FROM [Proveedores]
WHERE RazonSocial LIKE 'La%' and [Entregan].[RFC] = [Proveedores].[RFC] )
44 renglones
RFC		      Cantidad Fecha			Numero
DDDD800101   	202.00	1998-02-21 00:00:00.000	5003
EEEE800101   	263.00	1999-12-11 00:00:00.000	5004
FFFF800101   	503.00	2000-10-14 00:00:00.000	5005

ALL

FROM Entregan
WHERE Clave = ALL(SELECT Clave FROM Entregan WHERE Clave = 1000)
3 renglones
Clave
165.00
254.00
7.00

¿Qué hace la siguiente sentencia? Explica porque

SELECT TOP 2 * FROM Proyectos

Te regresa las primeras 2 tuplas porque eligió las top 2.

¿Qué sucede con la siguiente consulta? Explica porque

SELECT TOP Numero FROM Proyectos

Error de sintaxis, tiene que tener un numero.
SELECT TOP 1 Numero FROM Proyectos

ALTER TABLE materiales ADD PorcentajeImpuesto NUMERIC(6,2);
UPDATE materiales SET PorcentajeImpuesto = 2*clave/1000;
SELECT * FROM Materiales

¿Qué consulta usarías para obtener el importe de las entregas es decir, el total en dinero de lo entregado, basado en la cantidad de la entrega y el precio del material y el impuesto asignado?

SELECT Denominacion, SUM(Costo*Cantidad*(1+PorcentajeImpuesto/100)) as "Total A Pagar"
FROM Materiales M, Entregan E, Proyectos P
WHERE E.Clave = M.Clave AND E.Numero = P.Numero
GROUP BY Denominacion
20 renglones
Ampliación de la carretera a la huasteca	742461.1940000000
Aztecón	150200.2190000000
CIT Campeche	161603.0820000000

CREATE VIEW Top_2_Proyectos("Numero", "Denominacion") as
SELECT TOP 2 * FROM Proyectos

SELECT * FROM Top_2_Proyectos
2 renglones
5000	Vamos Mexico
5001	Aztecón

CREATE VIEW Prueba_1("clave","descripcion","costo") as
select *
from materiales
SELECT * FROM Razon_Social_La
44 renglones
clave   descripción     costo
1000	Varilla 3/16	100.00
1010	Varilla 4/32	115.00
1020	Varilla 3/17	130.00

CREATE VIEW Prueba_2("Descripcion") as
SELECT DISTINCT Descripcion
FROM Materiales, Entregan
WHERE Fecha BETWEEN '01-JAN-2000' AND '31/12/2000'

SELECT * FROM Prueba_2
42 renglones
Arena
Block
Cantera amarilla


CREATE VIEW Prueba_3("Clave","RFC","Numero","Fecha","Cantidad") as
select * from entregan where NOT clave=1000

SELECT * FROM Prueba_3
129 renglones
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1010	BBBB800101   	5018	2000-11-10 00:00:00.000	667.00
1010	BBBB800101   	5018	2002-03-29 00:00:00.000	523.00

SET DATEFORMAT DMY;

CREATE VIEW Prueba_4("Descripcion") as
select DISTINCT descripcion
from materiales, entregan
where materiales.clave=entregan.clave AND
Fecha BETWEEN '01/01/00' AND '31/12/00';

SELECT * FROM Prueba_4
22 renglones
Arena
Block
Cantera rosa

CREATE VIEW Prueba_5("Clave","RFC","Numero","Fecha","Cantidad") as
SELECT Clave,RFC,Numero,Fecha,Cantidad
FROM Entregan
WHERE Numero Between 5000 and 5010;

SELECT * FROM Prueba_5
60 renglones
1000	AAAA800101   	5000	1998-07-08 00:00:00.000	165.00
1010	BBBB800101   	5001	2000-05-03 00:00:00.000	528.00
1020	CCCC800101   	5002	2001-07-29 00:00:00.000	582.00


Los materiales (clave y descripciÛn) entregados al proyecto "MÈxico sin ti no estamos completos".

select m.clave, descripcion
from materiales m, proyectos p, entregan e
where m.clave = e.clave and e.numero = p.numero
and p.denominacion = 'Mexico sin ti no estamos completos'
3 renglones
1030	Varilla 4/33
1230	Cemento
1430	Pintura B1022

Los materiales (clave y descripciÛn) que han sido proporcionados por el proveedor "Acme tools".

select m.clave, descripcion
from materiales m, entregan e, proveedores pr
where m.clave = e.clave and pr.rfc = e.rfc
and pr.razonSocial = 'Acme tools'
0 renglones

El RFC de los proveedores que durante el 2000 entregaron en promedio cuando menos 300 materiales.

select rfc
from entregan
where fecha between '01/01/00' and '31/12/00'
group by rfc
having avg(cantidad)>=300
7 renglones
BBBB800101
CCCC800101
DDDD800101

El Total entregado por cada material en el aÒo 2000.

select descripcion, sum(cantidad) as 'total entregas'
from entregan e, materiales m
where e.clave = m.clave and fecha between '01/01/00' and '31/12/00'
group by descripcion
22 renglones
Arena	366.00
Block	466.00
Cantera rosa	162.00

La Clave del material m·s vendido durante el 2001. (se recomienda usar una vista intermedia para su soluciÛn)

select top 1 clave
from entregan
where fecha between '01/01/01' and '31/12/01'
group by clave
order by sum(cantidad) desc
1 renglon
1020

Productos que contienen el patrÛn 'ub' en su nombre.

select descripcion
from materiales
where descripcion like '%ub%'
12 renglones
Recubrimiento P1001
Recubrimiento P1010
Recubrimiento P1019

DenominaciÛn y suma del total a pagar para todos los proyectos.

select denominacion, sum(costo*cantidad*(1+porcentajeImpuesto/100)) as 'total a pagar'
from materiales m, entregan e, proyectos p
where e.clave = m.clave and e.numero = p.numero
group by denominacion
20 renglones
AmpliaciÛn de la carretera a la huasteca	742461.1940000000
AztecÛn	150200.2190000000
CIT Campeche	161603.0820000000

DenominaciÛn, RFC y RazonSocial de los proveedores que se suministran materiales al proyecto Televisa en acciÛn que no se encuentran apoyando al proyecto Educando en Coahuila. (Solo usando vistas)
input:
create view a as
select denominacion, e.RFC, pr.RazonSocial
from proyectos p, entregan e, proveedores pr
where denominacion = 'Educando en coahuila'
and e.numero = p.numero and pr.RFC = e.RFC

select * from a

4 renglones
Educando en Coahuila	EEEE800101   	Alvin
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	AAAA800101   	La fragua

DenominaciÛn, RFC y RazonSocial de los proveedores que se suministran materiales al proyecto Televisa en acciÛn que no se encuentran apoyando al proyecto Educando en Coahuila. (Sin usar vistas, utiliza not in, in o exists)

select denominacion, e.RFC, pr.RazonSocial
from proyectos p, entregan e, proveedores pr
where denominacion = 'Educando en coahuila'
and e.numero = p.numero and pr.RFC = e.RFC
4 renglones
Educando en Coahuila	EEEE800101   	Alvin
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	HHHH800101   	Tubasa
Educando en Coahuila	AAAA800101   	La fragua

Costo de los materiales y los Materiales que son entregados al proyecto Televisa en acciÛn cuyos proveedores tambiÈn suministran materiales al proyecto Educando en Coahuila.

select costo, descripcion
from proyectos p, entregan e, materiales m, proveedores pr
where denominacion = 'Televisa%' and  pr.RazonSocial LIKE 'Educando en Coahuila'
and e.numero = p.numero and m.clave = e.clave
0 renglones

Nombre del material, cantidad de veces entregados y total del costo de dichas entregas por material de todos los proyectos.

select descripcion, count(e.clave) as "Cantidad de veces entregado" , sum(e.Cantidad * m.Costo) as "Total del costo"
from entregan e, materiales m
where m.Clave = e.Clave
group by descripcion
42 renglones
Arena	3	213400.0000
Block	3	50640.0000
Cantera amarilla	3	172500.0000
